var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = WinTypes","category":"page"},{"location":"#WinTypes.jl","page":"Home","title":"WinTypes.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package makes it easier/quicker/more convenient to translate Windows API function from Julia and also improves readability with respect to the original function definitions in the Windows API.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pkg> add WinTypes","category":"page"},{"location":"#Usage-and-Examples","page":"Home","title":"Usage & Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Here's an example comparing calling Windows API functions with and without WinTypes:","category":"page"},{"location":"","page":"Home","title":"Home","text":"With WinTypes a Windows API call would look something like:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using WinTypes: HANDLE, DWORD, BOOL\n\nfunction get_console_mode()\n    STD_OUTPUT_HANDLE = -11\n    hOutput = ccall(:GetStdHandle, stdcall, HANDLE, (DWORD,), STD_OUTPUT_HANDLE % DWORD)\n    dwMode = Ref{DWORD}()\n    ccall(:GetConsoleMode, stdcall, BOOL, (HANDLE, Ref{DWORD}), hOutput, dwMode)\n    return dwMode[]\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now, compare this to the call without this package:","category":"page"},{"location":"","page":"Home","title":"Home","text":"\nfunction get_console_mode()\n    STD_OUTPUT_HANDLE = -11\n    hOutput = ccall(:GetStdHandle, stdcall, Ptr{Cvoid}, (UInt32,), STD_OUTPUT_HANDLE % UInt32)\n    dwMode = Ref{UInt32}()\n    ccall(:GetConsoleMode, stdcall, Int32, (Ref{Cvoid}, Ref{UInt32}), hOutput, dwMode)\n    return dwMode[]\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"Finally, here are the corresponding Windows API function syntax definitions in C:","category":"page"},{"location":"","page":"Home","title":"Home","text":"HANDLE WINAPI GetStdHandle(\n  _In_ DWORD nStdHandle\n);","category":"page"},{"location":"","page":"Home","title":"Home","text":"BOOL WINAPI GetConsoleMode(\n  _In_  HANDLE  hConsoleHandle,\n  _Out_ LPDWORD lpMode\n);","category":"page"},{"location":"","page":"Home","title":"Home","text":"As you can see, the call to these APIs using WinTypes is easier to translate and directly translatable without manually looking up the myriad Windows data types.","category":"page"},{"location":"#Alias-List","page":"Home","title":"Alias List","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The aliases defined in this package are provided below. Refer to https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types for detailed documentation on each constant.","category":"page"},{"location":"","page":"Home","title":"Home","text":"FALSE     = Cint(0)\nTRUE      = Cint(1)\n\nBYTE      = Cuchar\nWORD      = Cushort\nDWORD     = Culong\nDWORDLONG = UInt64\nDWORD32   = UInt32\nDWORD64   = UInt64\n\nBOOL      = Cint\nBOOLEAN   = BYTE\n\nCHAR      = Cchar\nCCHAR     = Cchar\n\nFLOAT     = Cfloat\n\nLONG      = Culong\nULONG     = Culong\nLONG32    = Cint\nLONG64    = Int64\nLONG_PTR  = Int\n\nSHORT     = Cshort\nUSHORT    = Cushort\n\nATOM      = WORD\nLANGID    = WORD\n\nCOLORREF  = DWORD\nLGRPID    = DWORD\nLCTYPE    = DWORD\n\nLCID      = DWORD\n\nINT       = Int32\nINT8      = Int8\nINT16     = Int16\nINT32     = Int32\nINT64     = Int64\nINT_PTR   = Int\nUINT_PTR  = UInt\n\nWPARAM    = UINT_PTR\nLPARAM    = LONG_PTR\n\nHANDLE = Ptr{Cvoid}\n\nHACCEL       = HANDLE\nHBITMAP      = HANDLE\nHBRUSH       = HANDLE\nHCOLORSPACE  = HANDLE\nHCONV        = HANDLE\nHCONVLIST    = HANDLE\nHDC          = HANDLE\nHDDEDATA     = HANDLE\nHDESK        = HANDLE\nHDROP        = HANDLE\nHDWP         = HANDLE\nHENHMETAFILE = HANDLE\nHFILE        = Cint\nHFONT        = HANDLE\nHGDIOBJ      = HANDLE\nHGLOBAL      = HANDLE\nHHOOK        = HANDLE\nHICON        = HANDLE\nHCURSOR      = HICON\nHINSTANCE    = HANDLE\nHKEY         = HANDLE\nHKL          = HANDLE\nHLOCAL       = HANDLE\nHMENU        = HANDLE\nHMETAFILE    = HANDLE\nHMODULE      = HANDLE\nHMONITOR     = HANDLE\nHPALETTE     = HANDLE\nHPEN         = HANDLE\nHRESULT      = Clong\nHRGN         = HANDLE\nHRSRC        = HANDLE\nHSZ          = HANDLE\nHWINSTA      = HANDLE\nHWND         = HANDLE\n\nPHANDLE = Ptr{HANDLE}\n\nUCHAR   = Cuchar\nWCHAR   = Cwchar_t\nPWCHAR  = Ptr{WCHAR}\n\nPWORD   = Ptr{WORD}\nLPWORD  = Ptr{WORD}\nPDWORD  = Ptr{DWORD}\nLPDWORD = Ptr{DWORD}\n\nVOID    = Cvoid\nPVOID   = Ptr{Cvoid}\nLPVOID  = Ptr{Cvoid}\nLPCVOID = Ptr{Cvoid}\n\nLPINT   = Ptr{Cint}\nPINT    = Ptr{Cint}\n\nPSTR    = Ptr{CHAR}\nPCSTR   = Ptr{CHAR}\nLPSTR   = Ptr{CHAR}\nLPCSTR  = Ptr{CHAR}\n\nPWSTR   = Ptr{WCHAR}\nPCWSTR  = Ptr{WCHAR}\nLPWSTR  = Ptr{WCHAR}\nLPCWSTR = Ptr{WCHAR}","category":"page"}]
}
